{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { useSelector } from \"react-redux\";\nimport OrderItem from \"./OrderItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function ViewCart(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      modalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.cartUpdate;\n  }),\n      items_data = _useSelector.items_data;\n\n  var _items_data$selectedI = items_data.selectedItems,\n      items = _items_data$selectedI.items,\n      restaurantName = _items_data$selectedI.restaurantName;\n  var total = items.map(function (item) {\n    return Number(item.price.replace(\"$\", \"\"));\n  }).reduce(function (prev, curr) {\n    return prev + curr;\n  }, 0);\n  var totalUSD = total.toLocaleString(\"en\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n\n  var addOrderToFireBase = function addOrderToFireBase() {\n    setLoading(true);\n    var db = firebase.firestore();\n    db.collection(\"orders\").add({\n      items: items,\n      restaurantName: restaurantName,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    }).then(function () {\n      setTimeout(function () {\n        setLoading(false);\n        navigation.navigate(\"OrderCompleted\");\n      }, 2500);\n    });\n  };\n\n  var styles = StyleSheet.create({\n    modalContainer: {\n      flex: 1,\n      justifyContent: \"flex-end\",\n      backgroundColor: \"rgba(0,0,0,0.7)\"\n    },\n    modalCheckoutContainer: {\n      backgroundColor: \"white\",\n      padding: 16,\n      height: 500,\n      borderWidth: 1\n    },\n    restaurantName: {\n      textAlign: \"center\",\n      fontWeight: \"600\",\n      fontSize: 18,\n      marginBottom: 10\n    },\n    subtotalContainer: {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      marginTop: 15\n    },\n    subtotalText: {\n      textAlign: \"left\",\n      fontWeight: \"600\",\n      fontSize: 15,\n      marginBottom: 10\n    }\n  });\n\n  var checkoutModalContent = function checkoutModalContent() {\n    return _jsx(_Fragment, {\n      children: _jsx(View, {\n        style: styles.modalContainer,\n        children: _jsxs(View, {\n          style: styles.modalCheckoutContainer,\n          children: [_jsx(Text, {\n            style: styles.restaurantName,\n            children: restaurantName\n          }), items.map(function (item, index) {\n            return _jsx(OrderItem, {\n              item: item\n            }, index);\n          }), _jsxs(View, {\n            style: styles.subtotalContainer,\n            children: [_jsx(Text, {\n              style: styles.subtotalText,\n              children: \"Subtotal\"\n            }), _jsx(Text, {\n              children: totalUSD\n            })]\n          }), _jsx(View, {\n            style: {\n              flexDirection: \"row\",\n              justifyContent: \"center\"\n            },\n            children: _jsxs(TouchableOpacity, {\n              style: {\n                marginTop: 20,\n                backgroundColor: \"black\",\n                alignItems: \"center\",\n                padding: 13,\n                borderRadius: 30,\n                width: 300,\n                position: \"relative\"\n              },\n              onPress: function onPress() {\n                addOrderToFireBase();\n                setModalVisible(false);\n              },\n              children: [_jsx(Text, {\n                style: {\n                  color: \"white\",\n                  fontSize: 20\n                },\n                children: \"Checkout\"\n              }), _jsx(Text, {\n                style: {\n                  position: \"absolute\",\n                  right: 20,\n                  color: \"white\",\n                  fontSize: 15,\n                  top: 17\n                },\n                children: total ? totalUSD : \"\"\n              })]\n            })\n          })]\n        })\n      })\n    });\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(Modal, {\n      animationType: \"slide\",\n      visible: modalVisible,\n      transparent: true,\n      onRequestClose: function onRequestClose() {\n        return setModalVisible(false);\n      },\n      children: checkoutModalContent()\n    }), total ? _jsx(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        flexDirection: \"row\",\n        position: \"absolute\",\n        bottom: 30,\n        zIndex: 999\n      },\n      children: _jsx(View, {\n        style: {\n          flexDirection: \"row\",\n          justifyContent: \"center\",\n          width: \"100%\"\n        },\n        children: _jsxs(TouchableOpacity, {\n          style: {\n            marginTop: 20,\n            backgroundColor: \"black\",\n            flexDirection: \"row\",\n            justifyContent: \"flex-end\",\n            padding: 15,\n            borderRadius: 30,\n            width: 300,\n            position: \"relative\"\n          },\n          onPress: function onPress() {\n            return setModalVisible(true);\n          },\n          children: [_jsx(Text, {\n            style: {\n              color: \"white\",\n              fontSize: 20,\n              marginRight: 30\n            },\n            children: \"View Cart\"\n          }), _jsx(Text, {\n            style: {\n              color: \"white\",\n              fontSize: 20\n            },\n            children: totalUSD\n          })]\n        })\n      })\n    }) : _jsx(_Fragment, {}), loading ? _jsx(View, {\n      style: {\n        backgroundColor: \"black\",\n        position: \"absolute\",\n        opacity: 0.6,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100%\",\n        width: \"100%\"\n      },\n      children: _jsx(LottieView, {\n        style: {\n          height: 200\n        },\n        source: require(\"../../assets/animations/scanner.json\"),\n        autoPlay: true,\n        speed: 3\n      })\n    }) : _jsx(_Fragment, {})]\n  });\n}","map":{"version":3,"sources":["C:/Users/sintin/Desktop/Projects_3/uberEats/uberEats/Uber-eats/uberEats/components/restaurantDetail/ViewCart.js"],"names":["React","useState","useSelector","OrderItem","ViewCart","navigation","modalVisible","setModalVisible","loading","setLoading","state","cartUpdate","items_data","selectedItems","items","restaurantName","total","map","item","Number","price","replace","reduce","prev","curr","totalUSD","toLocaleString","style","currency","addOrderToFireBase","db","firebase","firestore","collection","add","createdAt","FieldValue","serverTimestamp","then","setTimeout","navigate","styles","StyleSheet","create","modalContainer","flex","justifyContent","backgroundColor","modalCheckoutContainer","padding","height","borderWidth","textAlign","fontWeight","fontSize","marginBottom","subtotalContainer","flexDirection","marginTop","subtotalText","checkoutModalContent","index","alignItems","borderRadius","width","position","color","right","top","bottom","zIndex","marginRight","opacity","require"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, TouchableOpacity, Modal, StyleSheet } from \"react-native\";\r\nimport { useSelector } from \"react-redux\";\r\nimport OrderItem from \"./OrderItem\";\r\n// import firebase from \"../../firebase\";\r\n// import LottieView from \"lottie-react-native\";\r\n\r\nexport default function ViewCart({ navigation }) {\r\n    const [modalVisible, setModalVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const { items_data } = useSelector((state) => {\r\n        // console.log(' state.cartUpdate::', state.cartUpdate);\r\n        return state.cartUpdate\r\n    })\r\n\r\n\r\n    const { items, restaurantName } = items_data.selectedItems\r\n\r\n\r\n    const total = items\r\n        .map((item) => Number(item.price.replace(\"$\", \"\")))\r\n        .reduce((prev, curr) => prev + curr, 0);\r\n\r\n    const totalUSD = total.toLocaleString(\"en\", {\r\n        style: \"currency\",\r\n        currency: \"USD\",\r\n    });\r\n\r\n    const addOrderToFireBase = () => {\r\n        setLoading(true);\r\n        const db = firebase.firestore();\r\n        db.collection(\"orders\")\r\n            .add({\r\n                items: items,\r\n                restaurantName: restaurantName,\r\n                createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n            .then(() => {\r\n                setTimeout(() => {\r\n                    setLoading(false);\r\n                    navigation.navigate(\"OrderCompleted\");\r\n                }, 2500);\r\n            });\r\n    };\r\n\r\n    const styles = StyleSheet.create({\r\n        modalContainer: {\r\n            flex: 1,\r\n            justifyContent: \"flex-end\",\r\n            backgroundColor: \"rgba(0,0,0,0.7)\",\r\n        },\r\n\r\n        modalCheckoutContainer: {\r\n            backgroundColor: \"white\",\r\n            padding: 16,\r\n            height: 500,\r\n            borderWidth: 1,\r\n        },\r\n\r\n        restaurantName: {\r\n            textAlign: \"center\",\r\n            fontWeight: \"600\",\r\n            fontSize: 18,\r\n            marginBottom: 10,\r\n        },\r\n\r\n        subtotalContainer: {\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            marginTop: 15,\r\n        },\r\n\r\n        subtotalText: {\r\n            textAlign: \"left\",\r\n            fontWeight: \"600\",\r\n            fontSize: 15,\r\n            marginBottom: 10,\r\n        },\r\n    });\r\n\r\n    const checkoutModalContent = () => {\r\n        return (\r\n            <>\r\n                <View style={styles.modalContainer}>\r\n                    <View style={styles.modalCheckoutContainer}>\r\n                        <Text style={styles.restaurantName}>{restaurantName}</Text>\r\n                        {items.map((item, index) => (\r\n                            <OrderItem key={index} item={item} />\r\n                        ))}\r\n                        <View style={styles.subtotalContainer}>\r\n                            <Text style={styles.subtotalText}>Subtotal</Text>\r\n                            <Text>{totalUSD}</Text>\r\n                        </View>\r\n                        <View style={{ flexDirection: \"row\", justifyContent: \"center\" }}>\r\n                            <TouchableOpacity\r\n                                style={{\r\n                                    marginTop: 20,\r\n                                    backgroundColor: \"black\",\r\n                                    alignItems: \"center\",\r\n                                    padding: 13,\r\n                                    borderRadius: 30,\r\n                                    width: 300,\r\n                                    position: \"relative\",\r\n                                }}\r\n                                onPress={() => {\r\n                                    addOrderToFireBase();\r\n                                    setModalVisible(false);\r\n                                }}\r\n                            >\r\n                                <Text style={{ color: \"white\", fontSize: 20 }}>Checkout</Text>\r\n                                <Text\r\n                                    style={{\r\n                                        position: \"absolute\",\r\n                                        right: 20,\r\n                                        color: \"white\",\r\n                                        fontSize: 15,\r\n                                        top: 17,\r\n                                    }}\r\n                                >\r\n                                    {total ? totalUSD : \"\"}\r\n                                </Text>\r\n                            </TouchableOpacity>\r\n                        </View>\r\n                    </View>\r\n                </View>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                animationType=\"slide\"\r\n                visible={modalVisible}\r\n                transparent={true}\r\n                onRequestClose={() => setModalVisible(false)}\r\n            >\r\n                {checkoutModalContent()}\r\n            </Modal>\r\n            {total ? (\r\n                <View\r\n                    style={{\r\n                        flex: 1,\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                        flexDirection: \"row\",\r\n                        position: \"absolute\",\r\n                        bottom: 30,\r\n                        zIndex: 999,\r\n                    }}\r\n                >\r\n                    <View\r\n                        style={{\r\n                            flexDirection: \"row\",\r\n                            justifyContent: \"center\",\r\n                            width: \"100%\",\r\n                        }}\r\n                    >\r\n                        <TouchableOpacity\r\n                            style={{\r\n                                marginTop: 20,\r\n                                backgroundColor: \"black\",\r\n                                flexDirection: \"row\",\r\n                                justifyContent: \"flex-end\",\r\n                                padding: 15,\r\n                                borderRadius: 30,\r\n                                width: 300,\r\n                                position: \"relative\",\r\n                            }}\r\n                            onPress={() => setModalVisible(true)}\r\n                        >\r\n                            <Text style={{ color: \"white\", fontSize: 20, marginRight: 30 }}>\r\n                                View Cart\r\n                            </Text>\r\n                            <Text style={{ color: \"white\", fontSize: 20 }}>{totalUSD}</Text>\r\n                        </TouchableOpacity>\r\n                    </View>\r\n                </View>\r\n            ) : (\r\n                <></>\r\n            )}\r\n            {loading ? (\r\n                <View\r\n                    style={{\r\n                        backgroundColor: \"black\",\r\n                        position: \"absolute\",\r\n                        opacity: 0.6,\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        height: \"100%\",\r\n                        width: \"100%\",\r\n                    }}\r\n                >\r\n                    <LottieView\r\n                        style={{ height: 200 }}\r\n                        source={require(\"../../assets/animations/scanner.json\")}\r\n                        autoPlay\r\n                        speed={3}\r\n                    />\r\n                </View>\r\n            ) : (\r\n                <></>\r\n            )}\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}