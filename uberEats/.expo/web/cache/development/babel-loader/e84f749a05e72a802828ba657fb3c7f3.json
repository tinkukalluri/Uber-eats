{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"marginLeft\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Divider } from \"react-native-elements\";\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport { ADD_TO_CART, REMOVE_FROM_CART } from \"../../redux/reducers/cartReducer\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar styles = StyleSheet.create({\n  menuItemStyle: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    margin: 20\n  },\n  titleStyle: {\n    fontSize: 19,\n    fontWeight: \"600\"\n  }\n});\nexport default function MenuItems(_ref) {\n  var restaurantName = _ref.restaurantName,\n      foods = _ref.foods,\n      hideCheckbox = _ref.hideCheckbox,\n      marginLeft = _ref.marginLeft;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.cartUpdate;\n  }),\n      items_data = _useSelector.items_data;\n\n  var selectItem = function selectItem(food, checkboxValue) {\n    console.log(\"food in selectItem::\", food);\n\n    if (checkboxValue) {\n      dispatch(ADD_TO_CART({\n        items: _objectSpread({}, food),\n        restaurantName: restaurantName,\n        checkboxValue: checkboxValue\n      }));\n    } else {\n      dispatch(REMOVE_FROM_CART({\n        items: _objectSpread({}, food),\n        restaurantName: restaurantName,\n        checkboxValue: checkboxValue\n      }));\n    }\n  };\n\n  var cartItems = [];\n\n  if (items_data.selectedItems.restaurantName === restaurantName) {\n    cartItems = items_data.selectedItems.items;\n  }\n\n  var isFoodInCart = function isFoodInCart(food, cartItems) {\n    return Boolean(cartItems.find(function (item) {\n      return (item == null ? void 0 : item.title) === food.title;\n    }));\n  };\n\n  return _jsxs(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    children: [foods.map(function (food, index) {\n      return _jsxs(View, {\n        children: [_jsxs(View, {\n          style: styles.menuItemStyle,\n          children: [hideCheckbox ? _jsx(_Fragment, {}) : _jsx(BouncyCheckbox, {\n            iconStyle: {\n              borderColor: \"lightgray\",\n              borderRadius: 0\n            },\n            fillColor: \"green\",\n            isChecked: isFoodInCart(food, cartItems),\n            onPress: function onPress(checkboxValue) {\n              console.log(\"checkboxValue::\", checkboxValue);\n              selectItem(food, checkboxValue);\n            }\n          }), _jsx(FoodInfo, {\n            food: food\n          }), _jsx(FoodImage, {\n            food: food,\n            marginLeft: marginLeft ? marginLeft : 0\n          })]\n        }), _jsx(Divider, {\n          width: 0.5,\n          orientation: \"vertical\",\n          style: {\n            marginHorizontal: 20\n          }\n        })]\n      }, index);\n    }), _jsx(View, {\n      style: {\n        width: '100%',\n        height: 120\n      }\n    })]\n  });\n}\n\nvar FoodInfo = function FoodInfo(props) {\n  return _jsxs(View, {\n    style: {\n      justifyContent: \"space-evenly\",\n      flex: 1\n    },\n    children: [_jsx(Text, {\n      style: styles.titleStyle,\n      children: props.food.title\n    }), _jsx(Text, {\n      children: props.food.description\n    }), _jsx(Text, {\n      children: props.food.price\n    })]\n  });\n};\n\nvar FoodImage = function FoodImage(_ref2) {\n  var marginLeft = _ref2.marginLeft,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  return _jsx(View, {\n    children: _jsx(Image, {\n      source: {\n        uri: props.food.image\n      },\n      style: {\n        width: 100,\n        height: 100,\n        borderRadius: 8,\n        marginLeft: marginLeft\n      }\n    })\n  });\n};","map":{"version":3,"sources":["C:/Users/sintin/Desktop/Projects_3/uberEats/uberEats/Uber-eats/uberEats/components/restaurantDetail/MenuItems.js"],"names":["React","Divider","BouncyCheckbox","useDispatch","useSelector","ADD_TO_CART","REMOVE_FROM_CART","styles","StyleSheet","create","menuItemStyle","flexDirection","justifyContent","margin","titleStyle","fontSize","fontWeight","MenuItems","restaurantName","foods","hideCheckbox","marginLeft","dispatch","state","cartUpdate","items_data","selectItem","food","checkboxValue","console","log","items","cartItems","selectedItems","isFoodInCart","Boolean","find","item","title","map","index","borderColor","borderRadius","marginHorizontal","width","height","FoodInfo","props","flex","description","price","FoodImage","uri","image"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { View, Text, StyleSheet, Image, ScrollView } from \"react-native\";\r\nimport { Divider } from \"react-native-elements\";\r\nimport BouncyCheckbox from \"react-native-bouncy-checkbox\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ADD_TO_CART, REMOVE_FROM_CART } from '../../redux/reducers/cartReducer'\r\n\r\nconst styles = StyleSheet.create({\r\n    menuItemStyle: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        margin: 20,\r\n    },\r\n\r\n    titleStyle: {\r\n        fontSize: 19,\r\n        fontWeight: \"600\",\r\n    },\r\n});\r\n\r\nexport default function MenuItems({\r\n    restaurantName,\r\n    foods,\r\n    hideCheckbox,\r\n    marginLeft,\r\n}) {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    // const selectItem = (item, checkboxValue) =>\r\n    //     dispatch({\r\n    //         type: \"ADD_TO_CART\",\r\n    //         payload: {\r\n    //             ...item,\r\n    //             restaurantName: restaurantName,\r\n    //             checkboxValue: checkboxValue,\r\n    //         },\r\n    //     });\r\n\r\n    const { items_data } = useSelector((state) => {\r\n        // console.log(' state.cartUpdate::', state.cartUpdate);\r\n        return state.cartUpdate\r\n    })\r\n\r\n    const selectItem = (food, checkboxValue) => {\r\n        console.log(\"food in selectItem::\", food);\r\n        if (checkboxValue) {\r\n            dispatch(ADD_TO_CART({\r\n                items: { ...food },\r\n                restaurantName: restaurantName,\r\n                checkboxValue: checkboxValue,\r\n            }))\r\n        } else {\r\n            dispatch(REMOVE_FROM_CART({\r\n                items: { ...food },\r\n                restaurantName: restaurantName,\r\n                checkboxValue: checkboxValue,\r\n            }))\r\n        }\r\n    }\r\n\r\n    // const cartItems = useSelector(\r\n    //     (state) => state.cartReducer.selectedItems.items\r\n    // );\r\n\r\n\r\n    //cartItems is an array of objects\r\n    let cartItems = []\r\n    if (items_data.selectedItems.restaurantName === restaurantName) {\r\n        cartItems = items_data.selectedItems.items\r\n    }\r\n    // console.log(cartItems)   \r\n    const isFoodInCart = (food, cartItems) =>\r\n        Boolean(cartItems.find((item) => item?.title === food.title));\r\n\r\n    return (\r\n        <ScrollView showsVerticalScrollIndicator={false}>\r\n            {foods.map((food, index) => (\r\n                <View key={index} >\r\n                    <View style={styles.menuItemStyle}>\r\n                        {hideCheckbox ? (\r\n                            <></>\r\n                        ) : (\r\n                            <BouncyCheckbox\r\n                                iconStyle={{ borderColor: \"lightgray\", borderRadius: 0 }}\r\n                                fillColor=\"green\"\r\n                                isChecked={isFoodInCart(food, cartItems)}\r\n                                onPress={(checkboxValue) => { console.log(\"checkboxValue::\", checkboxValue); selectItem(food, checkboxValue) }}\r\n                            />\r\n                        )}\r\n                        <FoodInfo food={food} />\r\n                        <FoodImage food={food} marginLeft={marginLeft ? marginLeft : 0} />\r\n                    </View>\r\n                    <Divider\r\n                        width={0.5}\r\n                        orientation=\"vertical\"\r\n                        style={{ marginHorizontal: 20 }}\r\n                    />\r\n                </View>\r\n            ))}\r\n            <View style={{ width: '100%', height: 120 }}>\r\n\r\n            </View>\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\nconst FoodInfo = (props) => (\r\n    <View style={{ justifyContent: \"space-evenly\", flex: 1 }}>\r\n        <Text style={styles.titleStyle}>{props.food.title}</Text>\r\n        <Text>{props.food.description}</Text>\r\n        <Text>{props.food.price}</Text>\r\n    </View>\r\n);\r\n\r\nconst FoodImage = ({ marginLeft, ...props }) => (\r\n    <View>\r\n        <Image\r\n            source={{ uri: props.food.image }}\r\n            style={{\r\n                width: 100,\r\n                height: 100,\r\n                borderRadius: 8,\r\n                marginLeft: marginLeft,\r\n            }}\r\n        />\r\n    </View>\r\n);\r\n"]},"metadata":{},"sourceType":"module"}