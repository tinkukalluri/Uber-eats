{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport styles, { _textStyle, _iconContainer } from \"./BouncyCheckbox.style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar defaultCheckImage = require(\"./check.png\");\n\nvar BouncyCheckbox = function (_React$Component) {\n  _inherits(BouncyCheckbox, _React$Component);\n\n  var _super = _createSuper(BouncyCheckbox);\n\n  function BouncyCheckbox(props) {\n    var _this;\n\n    _classCallCheck(this, BouncyCheckbox);\n\n    _this = _super.call(this, props);\n\n    _this.onPress = function () {\n      var _this$props = _this.props,\n          _this$props$disableBu = _this$props.disableBuiltInState,\n          disableBuiltInState = _this$props$disableBu === void 0 ? false : _this$props$disableBu,\n          _this$props$useNative = _this$props.useNativeDriver,\n          useNativeDriver = _this$props$useNative === void 0 ? true : _this$props$useNative,\n          _this$props$bounceEff = _this$props.bounceEffect,\n          bounceEffect = _this$props$bounceEff === void 0 ? 1 : _this$props$bounceEff,\n          _this$props$bounceFri = _this$props.bounceFriction,\n          bounceFriction = _this$props$bounceFri === void 0 ? 3 : _this$props$bounceFri;\n      var _this$state = _this.state,\n          checked = _this$state.checked,\n          springValue = _this$state.springValue;\n\n      if (!disableBuiltInState) {\n        _this.setState({\n          checked: !checked\n        }, function () {\n          springValue.setValue(0.7);\n          Animated.spring(springValue, {\n            toValue: bounceEffect,\n            friction: bounceFriction,\n            useNativeDriver: useNativeDriver\n          }).start();\n          _this.props.onPress && _this.props.onPress(_this.state.checked);\n        });\n      } else {\n        springValue.setValue(0.7);\n        Animated.spring(springValue, {\n          toValue: bounceEffect,\n          friction: bounceFriction,\n          useNativeDriver: useNativeDriver\n        }).start();\n        _this.props.onPress && _this.props.onPress(_this.state.checked);\n      }\n    };\n\n    _this.renderCheckIcon = function () {\n      var _this$state2 = _this.state,\n          checked = _this$state2.checked,\n          springValue = _this$state2.springValue;\n      var _this$props2 = _this.props,\n          _this$props2$size = _this$props2.size,\n          size = _this$props2$size === void 0 ? 25 : _this$props2$size,\n          iconStyle = _this$props2.iconStyle,\n          iconComponent = _this$props2.iconComponent,\n          iconImageStyle = _this$props2.iconImageStyle,\n          _this$props2$fillColo = _this$props2.fillColor,\n          fillColor = _this$props2$fillColo === void 0 ? \"#ffc484\" : _this$props2$fillColo,\n          _this$props2$ImageCom = _this$props2.ImageComponent,\n          ImageComponent = _this$props2$ImageCom === void 0 ? Image : _this$props2$ImageCom,\n          _this$props2$unfillCo = _this$props2.unfillColor,\n          unfillColor = _this$props2$unfillCo === void 0 ? \"transparent\" : _this$props2$unfillCo,\n          disableBuiltInState = _this$props2.disableBuiltInState,\n          isChecked = _this$props2.isChecked,\n          _this$props2$checkIco = _this$props2.checkIconImageSource,\n          checkIconImageSource = _this$props2$checkIco === void 0 ? defaultCheckImage : _this$props2$checkIco;\n      var checkStatus = disableBuiltInState ? isChecked : checked;\n      return _jsx(Animated.View, {\n        style: [{\n          transform: [{\n            scale: springValue\n          }]\n        }, _iconContainer(size, checkStatus, fillColor, unfillColor), iconStyle],\n        children: iconComponent || checkStatus && _jsx(ImageComponent, {\n          source: checkIconImageSource,\n          style: [styles.iconImageStyle, iconImageStyle]\n        })\n      });\n    };\n\n    _this.renderCheckboxText = function () {\n      var _this$props3 = _this.props,\n          text = _this$props3.text,\n          textComponent = _this$props3.textComponent,\n          isChecked = _this$props3.isChecked,\n          textStyle = _this$props3.textStyle,\n          textContainerStyle = _this$props3.textContainerStyle,\n          disableBuiltInState = _this$props3.disableBuiltInState,\n          _this$props3$disableT = _this$props3.disableText,\n          disableText = _this$props3$disableT === void 0 ? false : _this$props3$disableT;\n      var checked = _this.state.checked;\n      return !disableText && (textComponent || _jsx(View, {\n        style: [styles.textContainer, textContainerStyle],\n        children: _jsx(Text, {\n          style: [_textStyle(disableBuiltInState ? isChecked : checked), textStyle],\n          children: text\n        })\n      }));\n    };\n\n    _this.state = {\n      checked: false,\n      springValue: new Animated.Value(1)\n    };\n    return _this;\n  }\n\n  _createClass(BouncyCheckbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        checked: this.props.isChecked || false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          style = _this$props4.style,\n          _this$props4$Touchabl = _this$props4.TouchableComponent,\n          TouchableComponent = _this$props4$Touchabl === void 0 ? TouchableOpacity : _this$props4$Touchabl;\n      return _jsxs(TouchableComponent, _objectSpread(_objectSpread({}, this.props), {}, {\n        style: [styles.container, style],\n        onPress: this.onPress.bind(this, Easing.bounce),\n        children: [this.renderCheckIcon(), this.renderCheckboxText()]\n      }));\n    }\n  }]);\n\n  return BouncyCheckbox;\n}(React.Component);\n\nexport default BouncyCheckbox;","map":{"version":3,"sources":["../../lib/BouncyCheckbox.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from \"react\";\nimport { Text, View, Image, Easing, Animated, TouchableOpacity, } from \"react-native\";\nimport styles, { _textStyle, _iconContainer } from \"./BouncyCheckbox.style\";\nconst defaultCheckImage = require(\"./check.png\");\nclass BouncyCheckbox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            checked: false,\n            springValue: new Animated.Value(1),\n        };\n    }\n    componentDidMount() {\n        this.setState({ checked: this.props.isChecked || false });\n    }\n    onPress = () => {\n        const { disableBuiltInState = false, useNativeDriver = true, bounceEffect = 1, bounceFriction = 3, } = this.props;\n        const { checked, springValue } = this.state;\n        if (!disableBuiltInState) {\n            this.setState({ checked: !checked }, () => {\n                springValue.setValue(0.7);\n                Animated.spring(springValue, {\n                    toValue: bounceEffect,\n                    friction: bounceFriction,\n                    useNativeDriver,\n                }).start();\n                this.props.onPress && this.props.onPress(this.state.checked);\n            });\n        }\n        else {\n            springValue.setValue(0.7);\n            Animated.spring(springValue, {\n                toValue: bounceEffect,\n                friction: bounceFriction,\n                useNativeDriver,\n            }).start();\n            this.props.onPress && this.props.onPress(this.state.checked);\n        }\n    };\n    renderCheckIcon = () => {\n        const { checked, springValue } = this.state;\n        const { size = 25, iconStyle, iconComponent, iconImageStyle, fillColor = \"#ffc484\", ImageComponent = Image, unfillColor = \"transparent\", disableBuiltInState, isChecked, checkIconImageSource = defaultCheckImage, } = this.props;\n        const checkStatus = disableBuiltInState ? isChecked : checked;\n        return (<Animated.View style={[\n                { transform: [{ scale: springValue }] },\n                _iconContainer(size, checkStatus, fillColor, unfillColor),\n                iconStyle,\n            ]}>\n        {iconComponent ||\n                (checkStatus && (<ImageComponent source={checkIconImageSource} style={[styles.iconImageStyle, iconImageStyle]}/>))}\n      </Animated.View>);\n    };\n    renderCheckboxText = () => {\n        const { text, textComponent, isChecked, textStyle, textContainerStyle, disableBuiltInState, disableText = false, } = this.props;\n        const { checked } = this.state;\n        return (!disableText &&\n            (textComponent || (<View style={[styles.textContainer, textContainerStyle]}>\n          <Text style={[\n                    _textStyle(disableBuiltInState ? isChecked : checked),\n                    textStyle,\n                ]}>\n            {text}\n          </Text>\n        </View>)));\n    };\n    render() {\n        const { style, TouchableComponent = TouchableOpacity } = this.props;\n        return (<TouchableComponent {...this.props} style={[styles.container, style]} onPress={this.onPress.bind(this, Easing.bounce)}>\n        {this.renderCheckIcon()}\n        {this.renderCheckboxText()}\n      </TouchableComponent>);\n    }\n}\nexport default BouncyCheckbox;\n//# sourceMappingURL=BouncyCheckbox.js.map"]},"metadata":{},"sourceType":"module"}